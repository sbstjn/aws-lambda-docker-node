name: Release

on:
  deployment

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Set $VERSION variable
        id: version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Update AWS Lambda
        run: echo "Use tag ${{ steps.version.outputs.VERSION }} from ECR for AWS Lambda"

      - uses: mgenteluci/cloudformation-deploy-action@v1.4.0
        env:
          TEMPLATE: 'aws/function.yml'
          AWS_STACK_NAME: 'example-stack'
          AWS_REGION: 'eu-central-1'
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEPLOY_BUCKET: ${{secrets.AWS_DEPLOY_BUCKET}}
          PARAMETER_OVERRIDES: ImageName=aws-lambda-docker-node ImageTag=v1.17.0

      - name: Update Deployment (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          state: 'success'
          deployment_id: ${{ github.event.deployment.id }}

      - name: Update Deployment (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          state: 'failure'
          deployment_id: ${{ github.event.deployment.id }}
