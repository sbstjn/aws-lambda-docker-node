name: Release

on:
  deployment

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set $VERSION variable
        id: version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Update AWS Lambda
        run: echo "Use tag ${{ steps.version.outputs.VERSION }} from ECR for AWS Lambda"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: example-stack
          template: aws/function.yml
          parameter-overrides: "ImageName=aws-lambda-docker-node,ImageTag=${{ steps.version.outputs.VERSION }}"

      - name: Update Deployment (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          state: 'success'
          deployment_id: ${{ github.event.deployment.id }}

      - name: Update Deployment (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          state: 'failure'
          deployment_id: ${{ github.event.deployment.id }}
